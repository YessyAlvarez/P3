//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dominio.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Servicio", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class Servicio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdServicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Dominio.ServiceReference.TipoEvento[] ListaEventosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreServicioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdServicio {
            get {
                return this.IdServicioField;
            }
            set {
                if ((this.IdServicioField.Equals(value) != true)) {
                    this.IdServicioField = value;
                    this.RaisePropertyChanged("IdServicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Dominio.ServiceReference.TipoEvento[] ListaEventos {
            get {
                return this.ListaEventosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaEventosField, value) != true)) {
                    this.ListaEventosField = value;
                    this.RaisePropertyChanged("ListaEventos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreServicio {
            get {
                return this.NombreServicioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreServicioField, value) != true)) {
                    this.NombreServicioField = value;
                    this.RaisePropertyChanged("NombreServicio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoEvento", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class TipoEvento : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProveedorServicio", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class ProveedorServicio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdProveedorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdServicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activo {
            get {
                return this.ActivoField;
            }
            set {
                if ((this.ActivoField.Equals(value) != true)) {
                    this.ActivoField = value;
                    this.RaisePropertyChanged("Activo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdProveedor {
            get {
                return this.IdProveedorField;
            }
            set {
                if ((object.ReferenceEquals(this.IdProveedorField, value) != true)) {
                    this.IdProveedorField = value;
                    this.RaisePropertyChanged("IdProveedor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdServicio {
            get {
                return this.IdServicioField;
            }
            set {
                if ((this.IdServicioField.Equals(value) != true)) {
                    this.IdServicioField = value;
                    this.RaisePropertyChanged("IdServicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imagen {
            get {
                return this.ImagenField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagenField, value) != true)) {
                    this.ImagenField = value;
                    this.RaisePropertyChanged("Imagen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proveedor", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class Proveedor : Dominio.ServiceReference.Usuario {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArancelVIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaRegistroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Dominio.ServiceReference.ProveedorServicio[] ListaServiciosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreFantasiaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activo {
            get {
                return this.ActivoField;
            }
            set {
                if ((this.ActivoField.Equals(value) != true)) {
                    this.ActivoField = value;
                    this.RaisePropertyChanged("Activo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ArancelVIP {
            get {
                return this.ArancelVIPField;
            }
            set {
                if ((this.ArancelVIPField.Equals(value) != true)) {
                    this.ArancelVIPField = value;
                    this.RaisePropertyChanged("ArancelVIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistro {
            get {
                return this.FechaRegistroField;
            }
            set {
                if ((this.FechaRegistroField.Equals(value) != true)) {
                    this.FechaRegistroField = value;
                    this.RaisePropertyChanged("FechaRegistro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Dominio.ServiceReference.ProveedorServicio[] ListaServicios {
            get {
                return this.ListaServiciosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaServiciosField, value) != true)) {
                    this.ListaServiciosField = value;
                    this.RaisePropertyChanged("ListaServicios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreFantasia {
            get {
                return this.NombreFantasiaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreFantasiaField, value) != true)) {
                    this.NombreFantasiaField = value;
                    this.RaisePropertyChanged("NombreFantasia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RUT {
            get {
                return this.RUTField;
            }
            set {
                if ((object.ReferenceEquals(this.RUTField, value) != true)) {
                    this.RUTField = value;
                    this.RaisePropertyChanged("RUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VIP {
            get {
                return this.VIPField;
            }
            set {
                if ((this.VIPField.Equals(value) != true)) {
                    this.VIPField = value;
                    this.RaisePropertyChanged("VIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Dominio.ServiceReference.Proveedor))]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreApellidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Dominio.ServiceReference.EnumRol TipoPerfilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioLoginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreApellido {
            get {
                return this.NombreApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreApellidoField, value) != true)) {
                    this.NombreApellidoField = value;
                    this.RaisePropertyChanged("NombreApellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Dominio.ServiceReference.EnumRol TipoPerfil {
            get {
                return this.TipoPerfilField;
            }
            set {
                if ((this.TipoPerfilField.Equals(value) != true)) {
                    this.TipoPerfilField = value;
                    this.RaisePropertyChanged("TipoPerfil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UsuarioLogin {
            get {
                return this.UsuarioLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioLoginField, value) != true)) {
                    this.UsuarioLoginField = value;
                    this.RaisePropertyChanged("UsuarioLogin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumRol", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    public enum EnumRol : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FuncionarioMantenimiento = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FuncionarioEscribano = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAutorizado = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAllServiciosWhitTipoEvento", ReplyAction="http://tempuri.org/IService/WCFAllServiciosWhitTipoEventoResponse")]
        Dominio.ServiceReference.Servicio[] WCFAllServiciosWhitTipoEvento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAllServiciosWhitTipoEvento", ReplyAction="http://tempuri.org/IService/WCFAllServiciosWhitTipoEventoResponse")]
        System.Threading.Tasks.Task<Dominio.ServiceReference.Servicio[]> WCFAllServiciosWhitTipoEventoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddProveedor", ReplyAction="http://tempuri.org/IService/WCFAddProveedorResponse")]
        bool WCFAddProveedor(string nombreCompletoProv, string nombreUsuario, string passw, string nombreFantasia, string email, string telefono, bool esVIP, double valorArancelVIP, Dominio.ServiceReference.ProveedorServicio[] listaServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddProveedor", ReplyAction="http://tempuri.org/IService/WCFAddProveedorResponse")]
        System.Threading.Tasks.Task<bool> WCFAddProveedorAsync(string nombreCompletoProv, string nombreUsuario, string passw, string nombreFantasia, string email, string telefono, bool esVIP, double valorArancelVIP, Dominio.ServiceReference.ProveedorServicio[] listaServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFShowAllProveedores", ReplyAction="http://tempuri.org/IService/WCFShowAllProveedoresResponse")]
        Dominio.ServiceReference.Proveedor[] WCFShowAllProveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFShowAllProveedores", ReplyAction="http://tempuri.org/IService/WCFShowAllProveedoresResponse")]
        System.Threading.Tasks.Task<Dominio.ServiceReference.Proveedor[]> WCFShowAllProveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFShowProveedorPorRUT", ReplyAction="http://tempuri.org/IService/WCFShowProveedorPorRUTResponse")]
        Dominio.ServiceReference.Proveedor WCFShowProveedorPorRUT(string nombreRUT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFShowProveedorPorRUT", ReplyAction="http://tempuri.org/IService/WCFShowProveedorPorRUTResponse")]
        System.Threading.Tasks.Task<Dominio.ServiceReference.Proveedor> WCFShowProveedorPorRUTAsync(string nombreRUT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFChangeDatosProveedor", ReplyAction="http://tempuri.org/IService/WCFChangeDatosProveedorResponse")]
        bool WCFChangeDatosProveedor(string idProveedor, System.DateTime fechaIngreso, bool esVIP, double valorArncelVIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFChangeDatosProveedor", ReplyAction="http://tempuri.org/IService/WCFChangeDatosProveedorResponse")]
        System.Threading.Tasks.Task<bool> WCFChangeDatosProveedorAsync(string idProveedor, System.DateTime fechaIngreso, bool esVIP, double valorArncelVIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFChangeArancelAnualProveedor", ReplyAction="http://tempuri.org/IService/WCFChangeArancelAnualProveedorResponse")]
        bool WCFChangeArancelAnualProveedor(int arancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFChangeArancelAnualProveedor", ReplyAction="http://tempuri.org/IService/WCFChangeArancelAnualProveedorResponse")]
        System.Threading.Tasks.Task<bool> WCFChangeArancelAnualProveedorAsync(int arancel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFObtenerArancelAnualProveedor", ReplyAction="http://tempuri.org/IService/WCFObtenerArancelAnualProveedorResponse")]
        int WCFObtenerArancelAnualProveedor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFObtenerArancelAnualProveedor", ReplyAction="http://tempuri.org/IService/WCFObtenerArancelAnualProveedorResponse")]
        System.Threading.Tasks.Task<int> WCFObtenerArancelAnualProveedorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFDesactivarProveedor", ReplyAction="http://tempuri.org/IService/WCFDesactivarProveedorResponse")]
        bool WCFDesactivarProveedor(string rutProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFDesactivarProveedor", ReplyAction="http://tempuri.org/IService/WCFDesactivarProveedorResponse")]
        System.Threading.Tasks.Task<bool> WCFDesactivarProveedorAsync(string rutProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGuardarTxtProveedores", ReplyAction="http://tempuri.org/IService/WCFGuardarTxtProveedoresResponse")]
        bool WCFGuardarTxtProveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGuardarTxtProveedores", ReplyAction="http://tempuri.org/IService/WCFGuardarTxtProveedoresResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxtProveedoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Dominio.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Dominio.ServiceReference.IService>, Dominio.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Dominio.ServiceReference.Servicio[] WCFAllServiciosWhitTipoEvento() {
            return base.Channel.WCFAllServiciosWhitTipoEvento();
        }
        
        public System.Threading.Tasks.Task<Dominio.ServiceReference.Servicio[]> WCFAllServiciosWhitTipoEventoAsync() {
            return base.Channel.WCFAllServiciosWhitTipoEventoAsync();
        }
        
        public bool WCFAddProveedor(string nombreCompletoProv, string nombreUsuario, string passw, string nombreFantasia, string email, string telefono, bool esVIP, double valorArancelVIP, Dominio.ServiceReference.ProveedorServicio[] listaServicios) {
            return base.Channel.WCFAddProveedor(nombreCompletoProv, nombreUsuario, passw, nombreFantasia, email, telefono, esVIP, valorArancelVIP, listaServicios);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddProveedorAsync(string nombreCompletoProv, string nombreUsuario, string passw, string nombreFantasia, string email, string telefono, bool esVIP, double valorArancelVIP, Dominio.ServiceReference.ProveedorServicio[] listaServicios) {
            return base.Channel.WCFAddProveedorAsync(nombreCompletoProv, nombreUsuario, passw, nombreFantasia, email, telefono, esVIP, valorArancelVIP, listaServicios);
        }
        
        public Dominio.ServiceReference.Proveedor[] WCFShowAllProveedores() {
            return base.Channel.WCFShowAllProveedores();
        }
        
        public System.Threading.Tasks.Task<Dominio.ServiceReference.Proveedor[]> WCFShowAllProveedoresAsync() {
            return base.Channel.WCFShowAllProveedoresAsync();
        }
        
        public Dominio.ServiceReference.Proveedor WCFShowProveedorPorRUT(string nombreRUT) {
            return base.Channel.WCFShowProveedorPorRUT(nombreRUT);
        }
        
        public System.Threading.Tasks.Task<Dominio.ServiceReference.Proveedor> WCFShowProveedorPorRUTAsync(string nombreRUT) {
            return base.Channel.WCFShowProveedorPorRUTAsync(nombreRUT);
        }
        
        public bool WCFChangeDatosProveedor(string idProveedor, System.DateTime fechaIngreso, bool esVIP, double valorArncelVIP) {
            return base.Channel.WCFChangeDatosProveedor(idProveedor, fechaIngreso, esVIP, valorArncelVIP);
        }
        
        public System.Threading.Tasks.Task<bool> WCFChangeDatosProveedorAsync(string idProveedor, System.DateTime fechaIngreso, bool esVIP, double valorArncelVIP) {
            return base.Channel.WCFChangeDatosProveedorAsync(idProveedor, fechaIngreso, esVIP, valorArncelVIP);
        }
        
        public bool WCFChangeArancelAnualProveedor(int arancel) {
            return base.Channel.WCFChangeArancelAnualProveedor(arancel);
        }
        
        public System.Threading.Tasks.Task<bool> WCFChangeArancelAnualProveedorAsync(int arancel) {
            return base.Channel.WCFChangeArancelAnualProveedorAsync(arancel);
        }
        
        public int WCFObtenerArancelAnualProveedor() {
            return base.Channel.WCFObtenerArancelAnualProveedor();
        }
        
        public System.Threading.Tasks.Task<int> WCFObtenerArancelAnualProveedorAsync() {
            return base.Channel.WCFObtenerArancelAnualProveedorAsync();
        }
        
        public bool WCFDesactivarProveedor(string rutProveedor) {
            return base.Channel.WCFDesactivarProveedor(rutProveedor);
        }
        
        public System.Threading.Tasks.Task<bool> WCFDesactivarProveedorAsync(string rutProveedor) {
            return base.Channel.WCFDesactivarProveedorAsync(rutProveedor);
        }
        
        public bool WCFGuardarTxtProveedores() {
            return base.Channel.WCFGuardarTxtProveedores();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxtProveedoresAsync() {
            return base.Channel.WCFGuardarTxtProveedoresAsync();
        }
    }
}
