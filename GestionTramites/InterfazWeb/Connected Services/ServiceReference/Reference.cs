//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InterfazWeb.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOGrupo", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DTOGrupo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddGrupo", ReplyAction="http://tempuri.org/IService/WCFAddGrupoResponse")]
        bool WCFAddGrupo(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddGrupo", ReplyAction="http://tempuri.org/IService/WCFAddGrupoResponse")]
        System.Threading.Tasks.Task<bool> WCFAddGrupoAsync(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddTramite", ReplyAction="http://tempuri.org/IService/WCFAddTramiteResponse")]
        bool WCFAddTramite(string titulo, string desc, double costo, int tiempo, System.Collections.Generic.List<int> gruposTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFAddTramite", ReplyAction="http://tempuri.org/IService/WCFAddTramiteResponse")]
        System.Threading.Tasks.Task<bool> WCFAddTramiteAsync(string titulo, string desc, double costo, int tiempo, System.Collections.Generic.List<int> gruposTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGuardarTxt", ReplyAction="http://tempuri.org/IService/WCFGuardarTxtResponse")]
        bool WCFGuardarTxt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGuardarTxt", ReplyAction="http://tempuri.org/IService/WCFGuardarTxtResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFExisteNombreTramite", ReplyAction="http://tempuri.org/IService/WCFExisteNombreTramiteResponse")]
        bool WCFExisteNombreTramite(string nombreTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFExisteNombreTramite", ReplyAction="http://tempuri.org/IService/WCFExisteNombreTramiteResponse")]
        System.Threading.Tasks.Task<bool> WCFExisteNombreTramiteAsync(string nombreTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGetGrupo", ReplyAction="http://tempuri.org/IService/WCFGetGrupoResponse")]
        System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFGetGrupo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGetGrupo", ReplyAction="http://tempuri.org/IService/WCFGetGrupoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFGetGrupoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFListarGrupos", ReplyAction="http://tempuri.org/IService/WCFListarGruposResponse")]
        System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFListarGrupos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFListarGrupos", ReplyAction="http://tempuri.org/IService/WCFListarGruposResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFListarGruposAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFObtenerGrupoPorId", ReplyAction="http://tempuri.org/IService/WCFObtenerGrupoPorIdResponse")]
        InterfazWeb.ServiceReference.DTOGrupo WCFObtenerGrupoPorId(int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFObtenerGrupoPorId", ReplyAction="http://tempuri.org/IService/WCFObtenerGrupoPorIdResponse")]
        System.Threading.Tasks.Task<InterfazWeb.ServiceReference.DTOGrupo> WCFObtenerGrupoPorIdAsync(int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFEditGrupo", ReplyAction="http://tempuri.org/IService/WCFEditGrupoResponse")]
        void WCFEditGrupo(int idGrupo, string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFEditGrupo", ReplyAction="http://tempuri.org/IService/WCFEditGrupoResponse")]
        System.Threading.Tasks.Task WCFEditGrupoAsync(int idGrupo, string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFValidarUsuario", ReplyAction="http://tempuri.org/IService/WCFValidarUsuarioResponse")]
        int WCFValidarUsuario(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFValidarUsuario", ReplyAction="http://tempuri.org/IService/WCFValidarUsuarioResponse")]
        System.Threading.Tasks.Task<int> WCFValidarUsuarioAsync(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGetNombreCompleto", ReplyAction="http://tempuri.org/IService/WCFGetNombreCompletoResponse")]
        string WCFGetNombreCompleto(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFGetNombreCompleto", ReplyAction="http://tempuri.org/IService/WCFGetNombreCompletoResponse")]
        System.Threading.Tasks.Task<string> WCFGetNombreCompletoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFListarGruposVacios", ReplyAction="http://tempuri.org/IService/WCFListarGruposVaciosResponse")]
        System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFListarGruposVacios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFListarGruposVacios", ReplyAction="http://tempuri.org/IService/WCFListarGruposVaciosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFListarGruposVaciosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFEliminarGrupo", ReplyAction="http://tempuri.org/IService/WCFEliminarGrupoResponse")]
        void WCFEliminarGrupo(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/WCFEliminarGrupo", ReplyAction="http://tempuri.org/IService/WCFEliminarGrupoResponse")]
        System.Threading.Tasks.Task WCFEliminarGrupoAsync(string nombreGrupo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : InterfazWeb.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<InterfazWeb.ServiceReference.IService>, InterfazWeb.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool WCFAddGrupo(string nombreGrupo) {
            return base.Channel.WCFAddGrupo(nombreGrupo);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddGrupoAsync(string nombreGrupo) {
            return base.Channel.WCFAddGrupoAsync(nombreGrupo);
        }
        
        public bool WCFAddTramite(string titulo, string desc, double costo, int tiempo, System.Collections.Generic.List<int> gruposTramite) {
            return base.Channel.WCFAddTramite(titulo, desc, costo, tiempo, gruposTramite);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddTramiteAsync(string titulo, string desc, double costo, int tiempo, System.Collections.Generic.List<int> gruposTramite) {
            return base.Channel.WCFAddTramiteAsync(titulo, desc, costo, tiempo, gruposTramite);
        }
        
        public bool WCFGuardarTxt() {
            return base.Channel.WCFGuardarTxt();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxtAsync() {
            return base.Channel.WCFGuardarTxtAsync();
        }
        
        public bool WCFExisteNombreTramite(string nombreTramite) {
            return base.Channel.WCFExisteNombreTramite(nombreTramite);
        }
        
        public System.Threading.Tasks.Task<bool> WCFExisteNombreTramiteAsync(string nombreTramite) {
            return base.Channel.WCFExisteNombreTramiteAsync(nombreTramite);
        }
        
        public System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFGetGrupo() {
            return base.Channel.WCFGetGrupo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFGetGrupoAsync() {
            return base.Channel.WCFGetGrupoAsync();
        }
        
        public System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFListarGrupos() {
            return base.Channel.WCFListarGrupos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFListarGruposAsync() {
            return base.Channel.WCFListarGruposAsync();
        }
        
        public InterfazWeb.ServiceReference.DTOGrupo WCFObtenerGrupoPorId(int idGrupo) {
            return base.Channel.WCFObtenerGrupoPorId(idGrupo);
        }
        
        public System.Threading.Tasks.Task<InterfazWeb.ServiceReference.DTOGrupo> WCFObtenerGrupoPorIdAsync(int idGrupo) {
            return base.Channel.WCFObtenerGrupoPorIdAsync(idGrupo);
        }
        
        public void WCFEditGrupo(int idGrupo, string nombreGrupo) {
            base.Channel.WCFEditGrupo(idGrupo, nombreGrupo);
        }
        
        public System.Threading.Tasks.Task WCFEditGrupoAsync(int idGrupo, string nombreGrupo) {
            return base.Channel.WCFEditGrupoAsync(idGrupo, nombreGrupo);
        }
        
        public int WCFValidarUsuario(string usuario, string password) {
            return base.Channel.WCFValidarUsuario(usuario, password);
        }
        
        public System.Threading.Tasks.Task<int> WCFValidarUsuarioAsync(string usuario, string password) {
            return base.Channel.WCFValidarUsuarioAsync(usuario, password);
        }
        
        public string WCFGetNombreCompleto(string nombreUsuario) {
            return base.Channel.WCFGetNombreCompleto(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<string> WCFGetNombreCompletoAsync(string nombreUsuario) {
            return base.Channel.WCFGetNombreCompletoAsync(nombreUsuario);
        }
        
        public System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo> WCFListarGruposVacios() {
            return base.Channel.WCFListarGruposVacios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InterfazWeb.ServiceReference.DTOGrupo>> WCFListarGruposVaciosAsync() {
            return base.Channel.WCFListarGruposVaciosAsync();
        }
        
        public void WCFEliminarGrupo(string nombreGrupo) {
            base.Channel.WCFEliminarGrupo(nombreGrupo);
        }
        
        public System.Threading.Tasks.Task WCFEliminarGrupoAsync(string nombreGrupo) {
            return base.Channel.WCFEliminarGrupoAsync(nombreGrupo);
        }
    }
}
